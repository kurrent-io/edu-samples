@page
@model DemoWeb.Pages.CartsModel
@{
    ViewData["Title"] = "Carts Items";
    const int maxVisiblePages = 5; // Maximum number of page links to display
}

<div class="container mt-4">
    <h1>Cart Items Table (Postgres Projection)</h1>

    <form method="get" asp-page="./Carts">
        <div class="row g-3 mb-4">
            <div class="col-md-3">
                <label asp-for="CartId" class="form-label">Cart ID</label>
                <input type="text" class="form-control" asp-for="CartId">
            </div>
            <div class="col-md-3">
                <label asp-for="CustomerId" class="form-label">Customer ID</label>
                <input type="text" class="form-control" asp-for="CustomerId">
            </div>
            <div class="col-md-3">
                <label asp-for="Status" class="form-label">Status</label>
                <select class="form-select" asp-for="Status">
                    <option value="">All</option>
                    <option value="STARTED">Shopping</option>
                    <option value="CHECKED_OUT">Checked Out</option>
                    <option value="ABANDONED">Abandoned</option>
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button type="submit" class="btn btn-primary me-2">Apply Filters</button>
                <a asp-page="./Carts" class="btn btn-secondary">Reset</a>
                <button type="button" class="btn btn-success ms-2 refresh-btn">
                    <i class="bi bi-arrow-clockwise"></i> Refresh
                </button>
            </div>
        </div>

        <input type="hidden" asp-for="SortColumn" />
        <input type="hidden" asp-for="SortDirection" />
        <input type="hidden" asp-for="PageNumber" />
        <input type="hidden" asp-for="PageSize" />
    </form>

    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>
                        <a href="@Model.GetSortUrl("cart_id")">Cart ID</a>
                        @if (Model.SortColumn == "cart_id")
                        {
                            <span>@(Model.SortDirection == "ASC" ? "⬆" : "⬇")</span>
                        }
                    </th>
                    <th>
                        <a href="@Model.GetSortUrl("customer_id")">Customer ID</a>
                        @if (Model.SortColumn == "customer_id")
                        {
                            <span>@(Model.SortDirection == "ASC" ? "⬆" : "⬇")</span>
                        }
                    </th>
                    <th>
                        <a href="@Model.GetSortUrl("status")">Status</a>
                        @if (Model.SortColumn == "status")
                        {
                            <span>@(Model.SortDirection == "ASC" ? "⬆" : "⬇")</span>
                        }
                    </th>
                    <th>
                        <a href="@Model.GetSortUrl("product_id")">Product ID</a>
                        @if (Model.SortColumn == "product_id")
                        {
                            <span>@(Model.SortDirection == "ASC" ? "⬆" : "⬇")</span>
                        }
                    </th>
                    <th>
                        <a href="@Model.GetSortUrl("product_name")">Product Name</a>
                        @if (Model.SortColumn == "product_name")
                        {
                            <span>@(Model.SortDirection == "ASC" ? "⬆" : "⬇")</span>
                        }
                    </th>
                    <th>
                        <a href="@Model.GetSortUrl("quantity")">Quantity</a>
                        @if (Model.SortColumn == "quantity")
                        {
                            <span>@(Model.SortDirection == "ASC" ? "⬆" : "⬇")</span>
                        }
                    </th>
                    <th>
                        <a href="@Model.GetSortUrl("price_per_unit")">Price Per Unit</a>
                        @if (Model.SortColumn == "price_per_unit")
                        {
                            <span>@(Model.SortDirection == "ASC" ? "⬆" : "⬇")</span>
                        }
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.Carts.Any())
                {
                    <tr>
                        <td colspan="7" class="text-center">No cart items found</td>
                    </tr>
                }
                else
                {
                    @foreach (var item in Model.Carts)
                    {
                        <tr>
                            <td>@item.CartId</td>
                            <td>@(item.CustomerId ?? "Anonymous")</td>
                            <td>
                                @switch (item.Status)
                                {
                                    case "STARTED":
                                        <span class="badge bg-primary">Shopping</span>
                                        break;
                                    case "CHECKED_OUT":
                                        <span class="badge bg-success">Checked Out</span>
                                        break;
                                    case "ABANDONED":
                                        <span class="badge bg-warning text-dark">Abandoned</span>
                                        break;
                                    default:
                                        <span class="badge bg-secondary">@item.Status</span>
                                        break;
                                }
                            </td>
                            <td>@item.ProductId</td>
                            <td>@item.ProductName</td>
                            <td>@item.Quantity</td>
                            <td>@item.PricePerUnit.ToString("C")</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    @if (Model.TotalPages > 0)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @* Previous page button *@
                <li class="page-item @(Model.PageNumber <= 1 ? "disabled" : "")">
                    <a class="page-link" href="@(Model.PageNumber <= 1 ? "#" : Model.GetPageUrl(Model.PageNumber - 1))" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                @{
                    // Calculate start and end page for visible pagination links
                    var startPage = Math.Max(1, Model.PageNumber - (maxVisiblePages / 2));
                    var endPage = Math.Min(Model.TotalPages, startPage + maxVisiblePages - 1);

                    // Adjust start page if we're near the end
                    if (endPage - startPage + 1 < maxVisiblePages && startPage > 1)
                    {
                        startPage = Math.Max(1, endPage - maxVisiblePages + 1);
                    }

                    // Show first page and ellipsis if needed
                    if (startPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Model.GetPageUrl(1)">1</a>
                        </li>
                        if (startPage > 2)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }
                    }

                    // Show page numbers
                    for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="@Model.GetPageUrl(i)">@i</a>
                        </li>
                    }

                    // Show last page and ellipsis if needed
                    if (endPage < Model.TotalPages)
                    {
                        if (endPage < Model.TotalPages - 1)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }
                        <li class="page-item">
                            <a class="page-link" href="@Model.GetPageUrl(Model.TotalPages)">@Model.TotalPages</a>
                        </li>
                    }
                }

                @* Next page button *@
                <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@(Model.PageNumber >= Model.TotalPages ? "#" : Model.GetPageUrl(Model.PageNumber + 1))" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>

        <div class="text-center mt-2">
            <small class="text-muted">
                Page @Model.PageNumber of @Model.TotalPages (@Model.TotalCount items)
            </small>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Just a small script to handle the form submission when clicking sort links
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');

            // Add refresh button functionality
            document.querySelectorAll('.refresh-btn').forEach(btn => {
                btn.addEventListener('click', function(e) {
                    e.preventDefault();
                    form.submit();
                });
            });
        });
    </script>
}
